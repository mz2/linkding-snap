name: linkding
base: core22
version: '0.0' # gets rewritten with adopt-info
summary: Self-hosted bookmark manager
description:
  linkding is a bookmark manager that you can host yourself. It's designed be to be minimal, fast, and easy to set up.

grade: stable
confinement: strict
adopt-info: webapp

apps:
  linkding:
    command: run.sh
    plugs:
      - home
      - network
      - network-bind
    environment:
      LD_HOST_DATA_DIR: $SNAP_COMMON/data
      BASE_DIR: $SNAP_COMMON/
  listener:
    command: run.sh
    daemon: simple
    install-mode: disable
    restart-condition: on-failure
    plugs:
      - home
      - network
      - network-bind
    environment:
      LD_HOST_DATA_DIR: $SNAP_COMMON/data
      BASE_DIR: $SNAP_COMMON/

parts:
  launcher:
    plugin: dump
    source-type: local
    source: ./snap/local
  sqlite-icu:
    after: [webapp]
    plugin: nil
    source-type: local
    source-tag: v1.24.0
    build-packages:
      - build-essential
      - libicu-dev
      - wget
      - unzip
      - pkg-config
    stage-packages:
      - libicu70
    build-environment:
      - SQLITE_RELEASE_YEAR: 2023
      - SQLITE_RELEASE: 3430000
    override-build: |
      craftctl default
      wget https://www.sqlite.org/${SQLITE_RELEASE_YEAR}/sqlite-amalgamation-${SQLITE_RELEASE}.zip
      unzip sqlite-amalgamation-${SQLITE_RELEASE}.zip
      cp sqlite-amalgamation-${SQLITE_RELEASE}/sqlite3.h ./sqlite3.h
      cp sqlite-amalgamation-${SQLITE_RELEASE}/sqlite3ext.h ./sqlite3ext.h
      wget https://www.sqlite.org/src/raw/ext/icu/icu.c?name=91c021c7e3e8bbba286960810fa303295c622e323567b2e6def4ce58e4466e60 -O icu.c
      gcc -fPIC -shared icu.c `pkg-config --libs --cflags icu-uc icu-io` -o libicu.so
      cp libicu.so $CRAFT_PART_INSTALL
  webapp:
    plugin: python
    python-requirements:
      - requirements.txt
      - requirements.dev.txt
    source-type: git
    source: https://github.com/sissbruecker/linkding.git
    
    build-packages:
      - python3-pip
      - git
      - libcrypt-dev
      - libcrypt1
      - libtirpc3
    stage-packages:
      - python3
      - libpython3.10
      - libpcre3
      - libpcre3-dev
    build-snaps:
      - node/21/stable
    override-pull: |
      craftctl default
      sed -i '/playwright/d' requirements.dev.txt
      sed -i 's/www-data/root/g' uwsgi.ini
      sed -i 's/www-data/root/g' supervisord.conf
      sed -i 's/manage.py/$SNAP\/manage.py/g' background-tasks-wrapper.sh

      # set version and persist it
      last_committed_tag="$(git describe --tags --abbrev=0)"
      last_committed_tag_ver="$(echo ${last_committed_tag} | sed 's/v//')"
      version="$(git describe --tags | sed 's/v//')"
      craftctl set version=$version
      echo $version > version.txt
    override-build: |
      craftctl default

      # frontend
      npm install
      npm run build

      # copy bootstrap script
      chmod ugo+x bootstrap.sh
      cp bootstrap.sh $CRAFT_PART_INSTALL

      # backend dependencies
      mkdir -p data/favicons
      mkdir -p bookmarks/styles
      python manage.py compilescss
      python manage.py collectstatic --ignore=*.scss
      python manage.py compilescss --delete-files
      
      cp -r static $CRAFT_PART_INSTALL

      # FIXME: hack to replace BASE_DIR _after_ the above build steps (BASE_DIR configurability in upstream linkding would resolve)
      # (failing that, another solution would be a snap specific settings module)
      sed -i "s|BASE_DIR = .*|BASE_DIR = os.environ['BASE_DIR']|" siteroot/settings/base.py
      cp uwsgi.ini $CRAFT_PART_INSTALL
      cp manage.py $CRAFT_PART_INSTALL
      cp -r siteroot $CRAFT_PART_INSTALL
      cp -r bookmarks $CRAFT_PART_INSTALL
      cp version.txt $CRAFT_PART_INSTALL
      cp supervisord.conf $CRAFT_PART_INSTALL
      cp background-tasks-wrapper.sh $CRAFT_PART_INSTALL
